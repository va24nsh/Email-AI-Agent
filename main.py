import imaplib
import email
import smtplib
from email.message import EmailMessage
import google.generativeai as genai

EMAIL = "luc27av.gaming@gmail.com"
APP_PASSWORD = ""
GEMINI_API_KEY = ""

genai.configure(api_key=GEMINI_API_KEY)
model = genai.GenerativeModel("gemini-2.5-flash")

def fetch_unread_emails():
    mail = imaplib.IMAP4_SSL("imap.gmail.com")
    mail.login(EMAIL, APP_PASSWORD)
    mail.select("inbox")
    _, data = mail.search(None, "UNSEEN")
    mail_ids = data[0].split()

    emails = []
    for num in mail_ids:
        _, msg_data = mail.fetch(num, "(RFC822)")
        raw_email = msg_data[0][1]
        msg = email.message_from_bytes(raw_email)

        subject = msg["Subject"]
        sender = msg["From"]
        body = ""

        if msg.is_multipart():
            for part in msg.walk():
                if part.get_content_type() == "text/plain":
                    body = part.get_payload(decode=True).decode()
                    break
        else:
            body = msg.get_payload(decode=True).decode()

        emails.append({"sender": sender, "subject": subject, "body": body})
    mail.logout()
    return emails

def generate_reply(email_text):
    prompt = f"You are a professional AI assistant automatically replying to emails on behalf of the user. Your responses should be clear, concise, polite, and context-aware. Analyze the incoming email content and reply appropriately without leaving any blanks or placeholders. Use a formal or semi-formal tone depending on the email content. Address questions, acknowledge requests, or provide relevant information. If you cannot answer fully, politely mention that the user will follow up soon. At the end of every reply, clearly state that this response is generated by an AI assistant to ensure transparency. End with a friendly closing such as “Best regards” or “Thank you.” Keep the reply self-contained and complete. This is the email body: \n\n{email_text} "
    response = model.generate_content(prompt)
    return response.text.strip()

def send_email(to, subject, body):
    msg = EmailMessage()
    msg["Subject"] = f"Re: {subject}"
    msg["From"] = EMAIL
    msg["To"] = to
    msg.set_content(body)

    with smtplib.SMTP_SSL("smtp.gmail.com", 465) as smtp:
        smtp.login(EMAIL, APP_PASSWORD)
        smtp.send_message(msg)

def main():
    unread_emails = fetch_unread_emails()
    for mail in unread_emails:
        print(f"Replying to: {mail['sender']} | Subject: {mail['subject']}")
        ai_response = generate_reply(mail["body"])
        send_email(mail["sender"], mail["subject"], ai_response)
        print("Replied ✅")

if __name__ == "__main__":
    main()
